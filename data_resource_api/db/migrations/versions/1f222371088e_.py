"""Create database structure for programs, providers, credentials,
participants.

Revision ID: 1f222371088e
Revises: 
Create Date: 2019-02-13 00:37:07.372972

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1f222371088e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('credential_type',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('type_name', sa.String(length=1024), nullable=False),
    sa.Column('audience_level', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('type_id')
    )
    op.create_table('entity_type',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('type_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('type_id')
    )
    op.create_table('program_potential_outcome',
    sa.Column('potential_outcome_id', sa.Integer(), nullable=False),
    sa.Column('potential_outcome_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('potential_outcome_id')
    )
    op.create_table('program_prerequisite',
    sa.Column('prerequisite_id', sa.Integer(), nullable=False),
    sa.Column('prerequisite_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('prerequisite_id')
    )
    op.create_table('providers',
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('provider_name', sa.String(length=100), nullable=False),
    sa.Column('provider_alternate_name', sa.String(length=100), nullable=True),
    sa.Column('entity_type_id', sa.Integer(), nullable=True),
    sa.Column('provider_full_address', sa.String(length=2048), nullable=True),
    sa.Column('provider_description', sa.String(length=1024), nullable=True),
    sa.Column('provider_contact_email', sa.String(length=256), nullable=True),
    sa.Column('provider_url', sa.String(length=1024), nullable=True),
    sa.Column('year_incorporated', sa.Integer(), nullable=True),
    sa.Column('optional_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('user_provided_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['entity_type_id'], ['entity_type.type_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('provider_id')
    )
    op.create_table('credentials',
    sa.Column('credential_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('credential_name', sa.String(length=1024), nullable=False),
    sa.Column('credential_description', sa.String(length=4098), nullable=False),
    sa.Column('credential_type_id', sa.Integer(), nullable=False),
    sa.Column('credential_status_type', sa.String(length=256), nullable=False),
    sa.Column('audience', sa.String(length=256), nullable=False),
    sa.Column('language', sa.String(length=256), nullable=False),
    sa.Column('ce_ctid', sa.String(length=50), nullable=True),
    sa.Column('webpage', sa.String(length=1024), nullable=True),
    sa.Column('optional_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('user_provided_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['credential_type_id'], ['credential_type.type_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.provider_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('credential_id')
    )
    op.create_table('geographic_locations',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('location_name', sa.String(length=100), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('location_description', sa.String(length=256), nullable=True),
    sa.Column('transportation', sa.String(length=256), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('location_full_address', sa.String(length=650), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.provider_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_table('physical_addresses',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=20), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=2), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['geographic_locations.location_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('programs',
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('program_name', sa.String(length=140), nullable=False),
    sa.Column('program_code', sa.String(length=32), nullable=False),
    sa.Column('program_description', sa.String(length=4096), nullable=False),
    sa.Column('program_status', sa.String(length=256), nullable=False),
    sa.Column('program_fees', sa.Float(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('eligibility_criteria', sa.String(length=256), nullable=False),
    sa.Column('credential_earned', sa.Integer(), nullable=True),
    sa.Column('potential_outcome_id', sa.Integer(), nullable=True),
    sa.Column('program_url', sa.String(length=256), nullable=False),
    sa.Column('program_contact_phone', sa.String(length=64), nullable=True),
    sa.Column('program_contact_email', sa.String(length=256), nullable=True),
    sa.Column('languages', sa.String(length=256), nullable=True),
    sa.Column('current_intake_capacity', sa.Integer(), nullable=True),
    sa.Column('program_offering_model', sa.Integer(), nullable=True),
    sa.Column('program_length_hours', sa.Float(), nullable=True),
    sa.Column('program_length_weeks', sa.Float(), nullable=True),
    sa.Column('prerequisite_id', sa.Integer(), nullable=True),
    sa.Column('program_soc', sa.Integer(), nullable=True),
    sa.Column('funding_sources', sa.String(length=2048), nullable=True),
    sa.Column('on_etpl', sa.Integer(), nullable=True),
    sa.Column('cost_of_books_and_supplies', sa.Float(), nullable=True),
    sa.Column('optional_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('user_provided_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['credential_earned'], ['credentials.credential_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['geographic_locations.location_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['potential_outcome_id'], ['program_potential_outcome.potential_outcome_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prerequisite_id'], ['program_prerequisite.prerequisite_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['provider_id'], ['providers.provider_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('program_id')
    )
    op.create_table('participants',
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('entry_date', sa.Date(), nullable=False),
    sa.Column('exit_date', sa.Date(), nullable=False),
    sa.Column('exit_type', sa.String(length=32), nullable=False),
    sa.Column('exit_reason', sa.String(length=256), nullable=False),
    sa.Column('optional_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('user_provided_fields', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['program_id'], ['programs.program_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('participant_id', 'program_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('participants')
    op.drop_table('programs')
    op.drop_table('physical_addresses')
    op.drop_table('geographic_locations')
    op.drop_table('credentials')
    op.drop_table('providers')
    op.drop_table('program_prerequisite')
    op.drop_table('program_potential_outcome')
    op.drop_table('entity_type')
    op.drop_table('credential_type')
    # ### end Alembic commands ###
